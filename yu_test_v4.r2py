"""
Modified from Prof. Zhuang's acclerometer.r2py and location_wifi.r2py
By Yu
"""

sensorlib = dy_import_module("sensorlib.r2py")

# get a connection to communicate with sensors
port = sensorlib.get_connectionport()
sensor_socket = sensorlib.getconnection(port)

# define sensor/method/arg in code: 
start_sensing(2, 0)

MAX_TIME = 120
MAG_THRESHOLD = 1.5
STEP_INTERVAL = 0.30

count = 0
step_count = 0


lastMagNoG = 0.00

mag = []


resultstring = "Time, x, y, z\n"
stepString = "Time, step_count, frequency, a_variance\n"
last_step_time = 0.00

starttime = getruntime()

while(getruntime() - starttime < MAX_TIME):
  try:
    sensor_data = get_acceleration()
    current_time = getruntime()
    #log(current_time, sensor_data, '\n')

    resultstring = resultstring + str(current_time) + ',' + str(sensor_data[0]) + ',' + str(sensor_data[1]) + ',' + str(sensor_data[2]) + '\n'
    count = count + 1

    x1 = str(sensor_data[0])
    y1 = str(sensor_data[1])
    z1 = str(sensor_data[2])

    if (x1 != 'None' and y1 != 'None' and z1 != 'None'):
      x = float(x1)
      y = float(y1)
      z = float(z1)

      magNoG = (x**2 + y**2 + z**2)**0.5 - 9.81

      mag.append(magNoG)

      if (count > 0) and (current_time - last_step_time > STEP_INTERVAL):
        if (lastMagNoG < MAG_THRESHOLD) and (magNoG > MAG_THRESHOLD):
          step_count = step_count + 1

          time_interval = current_time - last_step_time
          f = 1/time_interval
          last_step_time = current_time

          length = len(mag)
          
          sum_mag = 0.0
          for i in range(0, length):
            sum_mag = sum_mag + mag[i]
          
          average_mag = sum_mag/length

          variance_mag = 0.0
          for i in range(0, length):
            variance_mag = variance_mag + (mag[i]-average_mag)**2/length

          mag = []

          log(current_time, step_count, '\n')
          stepString = stepString + str(current_time) + ',' + str(step_count) + ',' + str(f) + ',' + str(variance_mag) +'\n'
      lastMagNoG = magNoG


  except Exception as e:
    log(str(e), '\n')
    stop_sensing()
    sensor_socket.close()
    #raise

stop_sensing()
sensor_socket.close()

myfilelist = listfiles()
filename = "accelerometer_data"

if filename in myfilelist:
  removefile(filename)  
myfileobject = openfile(filename, True)
myfileobject.writeat(resultstring, 0)
myfileobject.close()

filename = "step_count"

if filename in myfilelist:
  removefile(filename)
myfileobject = openfile(filename, True)
myfileobject.writeat(stepString, 0)
myfileobject.close()

duration = (getruntime() - starttime) / count
log(str(duration), step_count)
